pipeline {
    agent any

    // triggers {
    //     githubPush()
    // }

    environment {
        OS = 'debian'
        NODE_VERSION = '20'
        NPM_TOKEN = credentials('npm_token_momojslife')
        GITHUB_TOKEN = credentials('git-ptjkjm1')
    }

    options {
        // timeout
        timeout(time: 15, unit: "MINUTES")
        // 동시 빌드 방지
        disableConcurrentBuilds()
        // 빌드 history 유지
        // buildDiscarder(logRotator(numToKeepStr: '20'))
    }

    stages {
        stage('Deploy module to NPM') {
            tools {
                nodejs "node ${NODE_VERSION}"
            }

            stages {
                stage('Setup') {
                    steps {
                        // git checkout
                        checkout scm

                        // Git 설정
                        sh """
                            git remote set-url origin https://${GITHUB_TOKEN}@github.com/prjkmo112/chatbots.git
                            git config user.name 'Jenkins Bot'
                            git config user.email 'jenkins@example.com'
                        """

                        // NPM 설정
                        sh '''
                            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
                        '''
                    }
                }

                stage('Install Dependancies') {
                    steps {
                        // npm-run-all 설치
                        sh 'npm i --save-dev npm-run-all'
                    }
                }
                
                stage('Build & Test') {
                    // TODO: 검증 과정 필요할 듯.. (npm run lint, run test...)
                    steps {
                        sh 'npm run sync && npx lerna run build'
                    }
                }

                stage('Publish') {
                    steps {
                        sh '''
                            VERSION=$(node -p "require('./lerna.json').version")
                            git checkout main
                            echo "Publishing version: $VERSION"
                            npx lerna publish $VERSION -y
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            sh 'rm -f .npmrc'

            cleanWs()
        }
    }
}